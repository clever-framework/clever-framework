<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.toquery.framework.example.bff.admin.author.info.dao.BizAuthorDao">
    <insert id="saveMyBatis" parameterType="com.toquery.framework.example.modules.author.info.entity.BizAuthor">
        insert into biz_author(id, author_name,  create_user_id, create_date_time, update_user_id, update_date_time)
            value (#{id}, #{authorName}, #{createUserId}, #{createDateTime},  #{updateUserId}, #{updateDateTime})
    </insert>

    <select id="findMyBatisByTitle" resultType="com.toquery.framework.example.modules.author.info.entity.BizAuthor">
        select *
        from biz_author
        where 1=1
        <if test="authorName != null and authorName != '' ">
            author_name like #{authorName}
        </if>
    </select>

    <select id="listMyBatis" resultType="com.toquery.framework.example.modules.author.info.entity.BizAuthor">
        select id, author_name,  create_user_id, create_date_time, update_user_id, update_date_time
        from biz_author
    </select>

    <select id="findMyBatisById">
        select *
        from biz_author
        where id = #{id}
    </select>

    <update id="updateMyBatis">
        update biz_author
        set author_name = #{authorName}
        where id = #{id}
    </update>

    <delete id="deleteMyBatis">
        delete from biz_author
        where
        <foreach collection="ids" item="id" open="id in(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>
</mapper>
